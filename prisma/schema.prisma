generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model User {
  id              String           @id @default(uuid())
  createdAt       DateTime         @default(now())
  username        String           @unique
  password        String
  roleId          String
  roles           Role             @relation(fields: [roleId], references: [id])
  characterSheets CharacterSheet[]

  @@index([roleId])
}

model Role {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  roleName  String
  users     User[]
}

model CharacterSheet {
  id               String               @id @default(uuid())
  createdAt        DateTime             @default(now())
  userId           String
  chName           String
  chLevel          Int
  user             User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  chAttributes     CharacterAttribute[]
  AttributesValues AttributeValue[]

  @@index([userId])
}

model CharacterAttribute {
  id                      String                    @id @default(uuid())
  createdAt               DateTime                  @default(now())
  chSheetId               String
  chSheets                CharacterSheet            @relation(fields: [chSheetId], references: [id], onDelete: Cascade)
  CharacterAttributeNames CharacterAttributeNames[]

  @@index([chSheetId])
}

model CharacterAttributeNames {
  id         String             @id @default(uuid())
  chAttrId   String
  attrNameId String
  chAttr     CharacterAttribute @relation(fields: [chAttrId], references: [id], onDelete: Cascade)
  attrName   AttributeName      @relation(fields: [attrNameId], references: [id], onDelete: Cascade)

  @@index([chAttrId])
  @@index([attrNameId])
}

model AttributeName {
  id                      String                    @id @default(uuid())
  name                    String
  AttributesValues        AttributeValue[]
  createdAt               DateTime                  @default(now())
  CharacterAttributeNames CharacterAttributeNames[]
}

model AttributeValue {
  id         String         @id @default(uuid())
  chSheetId  String
  attrNameId String
  value      String
  attrName   AttributeName  @relation(fields: [attrNameId], references: [id], onDelete: Cascade)
  chSheet    CharacterSheet @relation(fields: [chSheetId], references: [id], onDelete: Cascade)
  createdAt  DateTime       @default(now())

  @@index([attrNameId])
  @@index([chSheetId])
}
